{"version":3,"file":"static/js/283.3b0e137a.chunk.js","mappings":"qMAGe,SAASA,IACpB,OAAgCC,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,QAAyB,MACpCC,GAAYD,EAAAA,EAAAA,QAA0B,MACtCE,GAAcF,EAAAA,EAAAA,QAA0B,MACxCG,GAASH,EAAAA,EAAAA,QAA2B,IAyD1C,OAvDAI,EAAAA,EAAAA,YAAU,WACN,SACgDC,IAAxCC,UAAUC,aAAaC,cAAsE,OAAxCF,UAAUC,aAAaC,cAC5EF,UAAUC,aAAaC,aAAa,CAAEC,OAAO,EAAOC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,OAC5EC,MAAK,SAAAC,GACuB,OAArBf,EAASgB,UACThB,EAASgB,QAAQC,UAAYF,EAC7BX,EAAOY,QAAUD,EAAYG,YAC7BlB,EAASgB,QAAQG,OAAOL,MAAK,SAAAM,GAAY,IAAE,SAAAC,GAAY,IAE9D,IAAEC,OAAM,SAAAD,GAAYE,MAAM,6CAAa,GAKnD,CAHC,MAAOC,GAEL,MADAD,MAAM,wCACA,IAAIE,MAAM,0KACnB,CACD,OAAO,WACHrB,EAAOY,QAAQU,SAAQ,SAAAC,GACnBA,EAAEC,MACL,GACJ,CACJ,GAAE,KAmCC,+BACI,iBAAKC,UAAU,eAAf,WACI,iBAAKA,UAAU,eAAf,WACI,kBACIA,UAAW/B,EAAW,SAAW,GACjCc,MAAO,IACPC,OAAQ,IACRiB,IAAK9B,KACT,mBAAQ+B,QAAS,WAAQhC,GAAaD,EAAY,EAAlD,SAAqDA,EAAW,eAAO,kBACvE,mBAAQiC,QA1CxB,WACkE,IAAD,EAAnC,OAAtB7B,EAAUc,SAAyC,OAArBhB,EAASgB,UACvC,UAAAd,EAAUc,QAAQgB,WAAW,aAA7B,SAAoCC,UAAUjC,EAASgB,QAAS,EAAG,GACnEd,EAAUc,QAAQkB,QAAO,SAACC,GACtB,GAAa,OAATA,GAAyC,OAAxBhC,EAAYa,QAAjC,CACA,IAAMoB,EAAMC,IAAIC,gBAAgBH,GAChChC,EAAYa,QAAQuB,SAAW,aAC/BpC,EAAYa,QAAQwB,KAAOJ,EAC3BjC,EAAYa,QAAQyB,QACpBJ,IAAIK,gBAAgBN,EALqC,CAM5D,QAAE9B,EAAW,GAoBrB,EAYe,8BAEJ,mBACIuB,UAAU,sBACVjB,MAAO,IACPC,OAAQ,IACRiB,IAAK5B,KACT,cAAGyC,QAAM,EAACb,IAAK3B,EAAf,0BAIf,C","sources":["components/Products/use-user-media/index.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport \"./index.css\";\n\nexport default function UseUserMedia () {\n    const [isMirror, setIsMirror] = useState(false);\n    const videoRef = useRef<HTMLVideoElement>(null);\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n    const downloadRef = useRef<HTMLAnchorElement>(null);\n    const tracks = useRef<MediaStreamTrack[]>([]);\n\n    useEffect(() => {\n        try {\n            if (navigator.mediaDevices.getUserMedia !== undefined || navigator.mediaDevices.getUserMedia !== null) {\n                navigator.mediaDevices.getUserMedia({ audio: false, video: { width: 400, height: 400 } })\n                    .then(mediaStream => {\n                        if (videoRef.current !== null) {\n                            videoRef.current.srcObject = mediaStream;\n                            tracks.current = mediaStream.getTracks();\n                            videoRef.current.play().then(result => {}, reason => {});\n                        }\n                    }).catch(reason => { alert(\"无法调用摄像头\"); });\n            }\n        } catch (e) {\n            alert(\"请查看控制台\");\n            throw new Error(\"地址栏搜索chrome://flags/，找到Insecure origins treated as secure,把本站域名http://www.lastingcoder.xyz输入\");\n        }\n        return () => {\n            tracks.current.forEach(t => {\n                t.stop();\n            });\n        };\n    }, []);\n\n    function saveImg () {\n        if (canvasRef.current !== null && videoRef.current !== null) {\n            canvasRef.current.getContext(\"2d\")?.drawImage(videoRef.current, 0, 0);\n            canvasRef.current.toBlob((blob): void => {\n                if (blob === null || downloadRef.current === null) return;\n                const url = URL.createObjectURL(blob);\n                downloadRef.current.download = \"target.png\";\n                downloadRef.current.href = url;\n                downloadRef.current.click();\n                URL.revokeObjectURL(url);\n            }, undefined, 1);\n            // const imgUrl = canvasRef.current.toDataURL()\n            // const [typePart, dataPart] = imgUrl.split(',')\n            // let bufferString = atob(dataPart)\n            // let u8array = new Uint8Array(bufferString.length)\n            // let n = bufferString.length\n            // const mimeType = typePart.match(/:(.*);/)\n            // while (n--) {\n            //     u8array[n] = bufferString.charCodeAt(n)\n            // }\n            // if (u8array !== null && mimeType !== null && downloadRef.current !== null) {\n            //     let blob = new Blob([u8array], { type: mimeType[1] })\n            //     let CompatibleURL = window.URL || window.webkitURL\n            //     const objUrl = CompatibleURL.createObjectURL(blob)\n            //     downloadRef.current.download = 'target.png'\n            //     downloadRef.current.href = objUrl\n            //     downloadRef.current.click()\n            //     CompatibleURL.revokeObjectURL(objUrl)\n            // }\n        }\n    }\n\n    return (\n        <>\n            <div className='useUserMedia'>\n                <div className='media-window'>\n                    <video\n                        className={isMirror ? \"mirror\" : \"\"}\n                        width={400}\n                        height={400}\n                        ref={videoRef} />\n                    <button onClick={() => { setIsMirror(!isMirror); }}>{isMirror ? \"镜像\" : \"正常\"}</button>\n                    <button onClick={saveImg}>截图</button>\n                </div>\n                <canvas\n                    className='useUserMidia-canvas'\n                    width={400}\n                    height={400}\n                    ref={canvasRef}></canvas>\n                <a hidden ref={downloadRef}>download</a>\n            </div>\n        </>\n    );\n}\n"],"names":["UseUserMedia","useState","isMirror","setIsMirror","videoRef","useRef","canvasRef","downloadRef","tracks","useEffect","undefined","navigator","mediaDevices","getUserMedia","audio","video","width","height","then","mediaStream","current","srcObject","getTracks","play","result","reason","catch","alert","e","Error","forEach","t","stop","className","ref","onClick","getContext","drawImage","toBlob","blob","url","URL","createObjectURL","download","href","click","revokeObjectURL","hidden"],"sourceRoot":""}