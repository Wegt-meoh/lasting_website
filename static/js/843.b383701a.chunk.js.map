{"version":3,"file":"static/js/843.b383701a.chunk.js","mappings":"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","sources":["components/FullScreen/index.tsx","utils/deepClone.ts","components/Products/pushman-game/constant/constants.ts","components/Products/pushman-game/utils/utils.ts","components/Products/pushman-game/data/graph.data.ts","components/Products/pushman-game/main/gameMaster.tsx","components/Products/pushman-game/index.tsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\n\nexport default function FullScreen ({ children }: any) {\n    const div = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        const listenFunc = (ev: KeyboardEvent) => {\n            if (ev.key === \"f\") {\n                if (document.fullscreenElement !== null) {\n                    document.exitFullscreen().then(result => {}, reason => {});\n                } else {\n                    div.current?.requestFullscreen().then(v => {}, r => {});\n                }\n            }\n        };\n\n        document.addEventListener(\"keyup\", listenFunc);\n\n        return () => {\n            document.removeEventListener(\"keyup\", listenFunc);\n        };\n    });\n\n    return (\n        <div ref={div}>\n            {children}\n        </div>\n    );\n}\n","export default function deepClone<T> (obj: T): T {\n    return JSON.parse(JSON.stringify(obj)) as T;\n}\n","// constants\ntype Tuple = [number, number];\n\ntype Direction2StringType = \"up\" | \"left\" | \"down\" | \"right\";\n\ninterface Rect {\n    beginPoint: Tuple\n    width: number\n    height: number\n}\n\nconst direction2TupleMap: { [k in Direction2StringType]: [number, number] } = {\n    up: [0, -1],\n    left: [-1, 0],\n    down: [0, 1],\n    right: [1, 0]\n};\n\nconst enum GraphCellEnum {\n    \"wall\" = 0,\n    \"road\" = 1,\n    \"player\" = 2,\n    \"goal\" = 3,\n    \"box\" = 4,\n    \"boxOnGoal\" = 5,\n    \"playerOnGoal\" = 6\n}\n\ntype GraphCellNumberType = 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\nexport { type Direction2StringType, type Tuple, type Rect, direction2TupleMap, GraphCellEnum, type GraphCellNumberType };\n","import { GraphCellNumberType, Rect, Tuple } from \"../constant/constants\";\n\n// box-size=border-box and begin point at left top of border\nfunction drawRectBorder (context: CanvasRenderingContext2D, x: number, y: number, w: number, h: number, lineWidth: number, color: string): void {\n    const { lineWidth: _lineWidth } = context;\n    const { strokeStyle: _strokeStyle } = context;\n    context.lineWidth = lineWidth;\n    context.strokeStyle = color;\n    context.strokeRect(x + context.lineWidth / 2, y + context.lineWidth / 2, w - context.lineWidth, h - context.lineWidth);\n\n    context.lineWidth = _lineWidth;\n    context.strokeStyle = _strokeStyle;\n}\n\nfunction tupleAdd (a: [number, number], b: [number, number]): [number, number] {\n    return [a[0] + b[0], a[1] + b[1]];\n}\n\nfunction pointInRect (point: Tuple, rect: Rect): boolean {\n    const { beginPoint, width, height } = rect;\n    const endPoint = [beginPoint[0] + width, beginPoint[1] + height];\n    if (point[0] >= beginPoint[0] && point[1] >= beginPoint[1] && point[0] <= endPoint[0] && point[1] <= endPoint[1]) return true;\n    return false;\n}\n\nconst XSB2NumberMap: { [index: string]: GraphCellNumberType } = {\n    \"@\": 2,\n    \"+\": 6,\n    $: 4,\n    \"*\": 5,\n    \"#\": 0,\n    \".\": 3,\n    \" \": 1,\n    \"-\": 1,\n    _: 1\n};\n\nfunction XSB2Number (data: string, w: number): GraphCellNumberType[][] {\n    if (data.length % w !== 0) return [];\n    const XSBArray: GraphCellNumberType[][] = [];\n    let t: GraphCellNumberType[] = [];\n    for (let i = 1; i <= data.length; i++) {\n        t.push(XSB2NumberMap[data[i - 1]]);\n        if (i % w === 0) {\n            XSBArray.push(t);\n            t = [];\n        }\n    }\n    return XSBArray;\n}\n\nfunction saveFinishedLevel (data: { [index: number]: boolean }) {\n    localStorage.setItem(\"finishedLevel\", JSON.stringify(data));\n}\n\nfunction getFinishedLevel (): { [index: number]: boolean } {\n    if (localStorage.getItem(\"finishedLevel\") === null) return {};\n    const result = localStorage.getItem(\"finishedLevel\");\n    if (result === null) {\n        return {};\n    } else {\n        return JSON.parse(result);\n    }\n}\nexport { pointInRect, drawRectBorder, tupleAdd, XSB2Number, saveFinishedLevel, getFinishedLevel };\n","import deepClone from \"../../../../utils/deepClone\";\nimport { GraphCellNumberType } from \"../constant/constants\";\nimport { XSB2Number } from \"../utils/utils\";\n\nconst graphData: GraphCellNumberType[][][] = [\n    [\n        [0, 0, 0, 0, 0, 0],\n        [0, 1, 1, 1, 1, 0],\n        [0, 1, 4, 1, 1, 0],\n        [0, 2, 1, 1, 1, 0],\n        [0, 1, 1, 3, 1, 0],\n        [0, 0, 0, 0, 0, 0]\n    ],\n    [\n        [1, 1, 0, 0, 0, 0, 0, 0, 0],\n        [1, 1, 0, 1, 1, 1, 1, 1, 0],\n        [1, 0, 0, 4, 0, 0, 0, 1, 0],\n        [1, 0, 1, 4, 1, 1, 0, 1, 0],\n        [1, 0, 1, 1, 1, 1, 0, 1, 0],\n        [1, 0, 0, 0, 4, 1, 0, 1, 0],\n        [1, 1, 1, 0, 1, 1, 0, 1, 0],\n        [0, 0, 0, 0, 1, 1, 0, 1, 0],\n        [0, 1, 1, 0, 1, 1, 0, 1, 0],\n        [0, 1, 3, 0, 0, 1, 1, 1, 0],\n        [0, 1, 3, 1, 1, 1, 2, 1, 0],\n        [0, 1, 3, 1, 1, 1, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0]\n    ],\n    XSB2Number(\"#########@-----##-#-$--##---.#.##-.#$*$##--$-$.##----.-#########\", 8),\n    [\n        [1, 1, 0, 0, 0, 0, 0, 1, 1],\n        [0, 0, 0, 1, 2, 1, 0, 0, 0],\n        [0, 1, 4, 4, 4, 4, 4, 1, 0],\n        [0, 1, 3, 3, 3, 3, 3, 1, 0],\n        [0, 1, 1, 1, 0, 1, 1, 1, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0]\n    ],\n    XSB2Number(\"___#####__##---####@$#-##--*$.-##-#-.-###-$-.-#_###--##___####__\", 8),\n    XSB2Number(\"_____#####_________##-@-##_______##--*--##_____##--*$*--##___##--*-*-*--##_##--*-*.*-*--###--*-*-*-*-*--##-#.*$#-#$#.*-##--*-*-*-*-*--###--*-*.#-*--##_##--*-*-*--##___##--*$*--##_____##--*--##_______##---##_________#####_____\", 15),\n    [\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 3, 1, 1, 1, 5, 1, 2, 1, 5, 1, 1, 1, 3, 0],\n        [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0],\n        [0, 1, 4, 0, 0, 5, 0, 5, 0, 5, 0, 0, 4, 1, 0],\n        [0, 1, 1, 0, 1, 1, 1, 4, 1, 1, 1, 0, 1, 1, 0],\n        [0, 1, 0, 0, 1, 0, 1, 3, 1, 0, 1, 0, 0, 1, 0],\n        [0, 3, 4, 3, 4, 1, 0, 1, 0, 1, 4, 3, 4, 3, 0],\n        [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0],\n        [0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0],\n        [0, 1, 1, 1, 1, 3, 4, 1, 4, 1, 1, 1, 1, 3, 0],\n        [0, 4, 4, 0, 0, 1, 0, 3, 4, 4, 0, 3, 1, 1, 0],\n        [0, 1, 3, 4, 3, 1, 0, 1, 1, 3, 1, 4, 0, 4, 0],\n        [0, 3, 3, 4, 3, 5, 4, 5, 4, 3, 4, 3, 1, 1, 0],\n        [0, 5, 1, 1, 1, 4, 1, 1, 3, 1, 0, 0, 1, 3, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    ],\n    XSB2Number(\"#############@-$-.---##-.$*$*-#-##-$-.-$-#-##**-#-***-##-*-.-$.*-##-*$#*--*-##-.-*---*-##-*$###*.-##-.------#############\", 11),\n    XSB2Number(\"_#####__####____________________#--#####--#######_______#####__#--------$------#########---#__#--######-#####-#--$-$------#_##$-#----#-------#--$-$--#$$$###-$-#-$--#$###$$-##---###-$---##-#-$-#$##-#-$-###--###-$---$-##---#-#----#-$-###.###-$--$---######---##-#-$-#---.-#.#$######____#-$##--.-#-#-$-*-$---####______#--##-$.#--#@##*##$-----#______#-#####.#--.*#...#---#$-#______#-#--##.-##.*..#$#####--#______#-#-*.*...#...#--$-----##_____##-#-.##.*....#-----#-$-###____#--##-##.#.*.##--#--#$#---#____#----$-#.#.*####--###--$$-#____####---#......*.*-#_#$#---#_______########--###--#_#---###______________####_####_#####___\", 31)\n];\n\n/**\n *\n * @param level 关卡id\n * @returns 关卡数据的拷贝\n */\nfunction getGraphData (level: number): GraphCellNumberType[][] {\n    try {\n        const t = deepClone(graphData[level]);\n        return t;\n    } catch (e) {\n        alert(\"get map data error:no such level in map data\");\n        throw new Error(\"get map data error:no such level in map data\");\n    }\n}\n\n/**\n * 获取关卡总数\n * @returns 关卡数\n */\nfunction getGraphLength (): number {\n    return graphData.length;\n}\n\nexport { getGraphData, getGraphLength };\n","import deepClone from \"../../../../utils/deepClone\";\nimport { direction2TupleMap, Direction2StringType, GraphCellEnum, Tuple, Rect } from \"../constant/constants\";\nimport { getGraphData } from \"../data/graph.data\";\nimport { drawRectBorder, getFinishedLevel, pointInRect, saveFinishedLevel, tupleAdd } from \"../utils/utils\";\n\n// param\nconst unitSize = 40;\nconst lineWidth = 5;\nconst radius = unitSize / 2 * 0.8;\nconst goalRadius = unitSize / 2 * 0.4;\nconst bgColor = \"#bdbdbd\";\nconst wallStrockColor = \"#5f5f58\";\nconst boxStrockColor = \"#7e7515\";\nconst goalFillColor = \"#ff0000\";\nconst playerOnGoalFillColor = \"#ff0000\";\nconst playerFillColor = \"#0000ff\";\nconst boxOnGoalFillColor = \"#ff0000\";\nconst boxOnGoalStorckColor = \"#7e7515\";\n\nexport default class PushBox {\n    level: number;\n    canvas: HTMLCanvasElement;\n    context: CanvasRenderingContext2D;\n    graphStack: number[][][];\n    finishedLevel: { [index: number]: boolean };\n    constructor (level: number, canvas: HTMLCanvasElement) {\n        this.canvas = canvas;\n        if (this.canvas.getContext(\"2d\") !== null) {\n            this.context = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n        } else {\n            throw new Error(\"CanvasRenderingContext2D is null\");\n        }\n        this.finishedLevel = getFinishedLevel();\n        this.level = level;\n        this.graphStack = [];\n        this.graphStack.push(getGraphData(level));\n        this.canvas.width = this.graphStack[0][0].length * unitSize;\n        this.canvas.height = this.graphStack[0].length * unitSize;\n        this.render();\n    }\n\n    loadLevel (level: number) {\n        this.level = level;\n        this.graphStack = [];\n        this.graphStack.push(getGraphData(level));\n        this.canvas.width = this.graphStack[0][0].length * unitSize;\n        this.canvas.height = this.graphStack[0].length * unitSize;\n        this.render();\n    }\n\n    /**\n     * 撤销上一步\n     * @returns void\n     */\n    back (): void {\n        if (this.graphStack.length <= 1) return;\n        this.graphStack.pop();\n        this.render();\n    }\n\n    paintCell (x: number, y: number, what: number) {\n        switch (what) {\n            case GraphCellEnum.road:\n                // before paint cell,have painted all the cells road color\n                break;\n\n            case GraphCellEnum.goal:\n                this.context.fillStyle = goalFillColor;\n                this.context.beginPath();\n                this.context.arc(x * unitSize + unitSize / 2, y * unitSize + unitSize / 2, goalRadius, 0, Math.PI * 2);\n                this.context.closePath();\n                this.context.fill();\n                break;\n            case GraphCellEnum.wall:\n                drawRectBorder(\n                    this.context, x * unitSize, y * unitSize,\n                    unitSize, unitSize, lineWidth, wallStrockColor);\n                break;\n            case GraphCellEnum.box:\n                drawRectBorder(\n                    this.context, x * unitSize, y * unitSize,\n                    unitSize, unitSize, lineWidth, boxStrockColor);\n                break;\n            case GraphCellEnum.boxOnGoal: {\n                const w = unitSize - 2 * lineWidth;\n                drawRectBorder(\n                    this.context, x * unitSize, y * unitSize,\n                    unitSize, unitSize, lineWidth, boxOnGoalStorckColor);\n                this.context.fillStyle = boxOnGoalFillColor;\n                this.context.fillRect(x * unitSize + lineWidth, y * unitSize + lineWidth, w, w);\n                break;\n            }\n            case GraphCellEnum.player:\n                this.context.fillStyle = playerFillColor;\n                this.context.beginPath();\n                this.context.arc(x * unitSize + unitSize / 2, y * unitSize + unitSize / 2, radius, 0, Math.PI * 2);\n                this.context.closePath();\n                this.context.fill();\n                break;\n            case GraphCellEnum.playerOnGoal:\n                this.context.fillStyle = playerOnGoalFillColor;\n                this.context.beginPath();\n                this.context.arc(x * unitSize + unitSize / 2, y * unitSize + unitSize / 2, radius, 0, Math.PI * 2);\n                this.context.closePath();\n                this.context.fill();\n                break;\n        }\n    }\n\n    getPlayerPos (): [number, number] {\n        const map = this.graphStack[this.graphStack.length - 1];\n        for (let i = 0; i < map?.length; i++) {\n            for (let j = 0; j < map[0]?.length; j++) {\n                if (map[i][j] === GraphCellEnum.player || map[i][j] === GraphCellEnum.playerOnGoal) {\n                    return [j, i];\n                }\n            }\n        }\n        throw new Error(\"function getPlayerPos: can not found player\");\n    }\n\n    getGraphCellValue (pos: Tuple): number {\n        const map = this.graphStack[this.graphStack.length - 1];\n        if (map === undefined) {\n            alert(\"function getMapCell: map is undefined\");\n            throw new Error(\"function getMapCell: map is undefined\");\n        }\n        return map[pos[1]][pos[0]];\n    }\n\n    setGraphCellValue (pos: Tuple, value: number) {\n        try {\n            const map = this.graphStack.pop();\n            if (map === undefined) {\n                alert(\"function setMapCell: map is undefined\");\n                throw new Error(\"function setMapCell: map is undefined\");\n            }\n            map[pos[1]][pos[0]] = value;\n            this.graphStack.push(map);\n        } catch (e) {\n            alert(\"function setMapCell: error\");\n            throw new Error(\"function setMapCell: error\");\n        }\n    }\n\n    playerMove (direction: Direction2StringType) {\n        const currentPos = this.getPlayerPos();\n        const nextPos = tupleAdd(currentPos, direction2TupleMap[direction]);\n        switch (this.getGraphCellValue(nextPos)) {\n            case GraphCellEnum.wall:\n                break;\n            case GraphCellEnum.road:\n            case GraphCellEnum.goal: {\n                const map: number[][] = deepClone(this.graphStack[this.graphStack.length - 1]);\n                this.graphStack.push(map);\n                this.setGraphCellValue(nextPos, this.getGraphCellValue(nextPos) === GraphCellEnum.road\n                    ? GraphCellEnum.player\n                    : GraphCellEnum.playerOnGoal);\n                this.setGraphCellValue(currentPos,\n                    this.getGraphCellValue(currentPos) === GraphCellEnum.playerOnGoal\n                        ? GraphCellEnum.goal\n                        : GraphCellEnum.road);\n                break;\n            }\n            case GraphCellEnum.box:\n            case GraphCellEnum.boxOnGoal:\n                if (this.boxMovable(nextPos, direction)) {\n                    const map = deepClone(this.graphStack[this.graphStack.length - 1]);\n                    this.graphStack.push(map);\n                    const next2Pos = tupleAdd(nextPos, direction2TupleMap[direction]);\n                    this.setGraphCellValue(next2Pos,\n                        this.getGraphCellValue(next2Pos) === GraphCellEnum.goal\n                            ? GraphCellEnum.boxOnGoal\n                            : GraphCellEnum.box);\n                    this.setGraphCellValue(nextPos,\n                        this.getGraphCellValue(nextPos) === GraphCellEnum.box\n                            ? GraphCellEnum.player\n                            : GraphCellEnum.playerOnGoal);\n                    this.setGraphCellValue(currentPos,\n                        this.getGraphCellValue(currentPos) === GraphCellEnum.playerOnGoal\n                            ? GraphCellEnum.goal\n                            : GraphCellEnum.road);\n                }\n                break;\n        }\n        this.render();\n    }\n\n    boxMovable (boxPos: Tuple, direction: Direction2StringType): boolean {\n        const nextPos = tupleAdd(boxPos, direction2TupleMap[direction]);\n        switch (this.getGraphCellValue(nextPos)) {\n            case GraphCellEnum.road:\n            case GraphCellEnum.goal:\n                return true;\n            default:\n                return false;\n        }\n    }\n\n    confirm (level: number, callback: () => any): void {\n        const confirmDivWidth = 400;\n\n        // make canvas width big enough\n        this.canvas.width = Math.max(this.canvas.width, confirmDivWidth);\n        this.render();\n\n        const textDiv = {\n            width: 400,\n            height: 60,\n            x: 10,\n            y: 10,\n            backgroundColor: \"#4f4f4f\",\n            fontColor: \"#ffffff\",\n            padding: 8\n        };\n        const optionDiv = {\n            width: textDiv.width / 2,\n            height: 60,\n            y: textDiv.y + textDiv.height,\n            leftX: textDiv.x,\n            rightX: textDiv.x + textDiv.width / 2,\n            boderColor: \"#000000\",\n            backgroundColor: \"#4f4f4f\",\n            fontOffset: 10\n        };\n\n        // make it center\n        textDiv.x = this.canvas.width / 2 - textDiv.width / 2;\n        textDiv.y = this.canvas.height / 2 - (textDiv.height + optionDiv.height) / 2;\n        optionDiv.y = textDiv.y + textDiv.height;\n        optionDiv.leftX = textDiv.x;\n        optionDiv.rightX = textDiv.x + textDiv.width / 2;\n\n        // text div\n        this.context.fillStyle = textDiv.backgroundColor;\n        this.context.fillRect(textDiv.x, textDiv.y, textDiv.width, textDiv.height);\n        this.context.fillStyle = textDiv.fontColor;\n        this.context.font = \"16px serif\";\n        this.context.textBaseline = \"top\";\n        this.context.fillText(`are you sure go to level ${level}?`, textDiv.x + textDiv.padding, textDiv.y + textDiv.padding);\n        this.context.fillText(\"any change that you done will be losed.\", textDiv.x + textDiv.padding, textDiv.y + textDiv.padding + 14);\n\n        // left option\n        this.context.fillStyle = optionDiv.backgroundColor;\n        this.context.fillRect(optionDiv.leftX, optionDiv.y,\n            optionDiv.width, optionDiv.height);\n        drawRectBorder(this.context,\n            optionDiv.leftX, optionDiv.y,\n            optionDiv.width, optionDiv.height,\n            4, optionDiv.boderColor);\n        this.context.fillStyle = textDiv.fontColor;\n        this.context.fillText(\"Yes\", optionDiv.leftX + optionDiv.width / 2 - optionDiv.fontOffset, optionDiv.y + optionDiv.height / 2 - optionDiv.fontOffset);\n\n        // right option\n        this.context.fillStyle = optionDiv.backgroundColor;\n        this.context.fillRect(optionDiv.rightX, optionDiv.y,\n            optionDiv.width, optionDiv.height);\n        drawRectBorder(this.context,\n            optionDiv.rightX, optionDiv.y,\n            optionDiv.width, optionDiv.height,\n            4, optionDiv.boderColor);\n        this.context.fillStyle = textDiv.fontColor;\n        this.context.fillText(\"No\", optionDiv.rightX + optionDiv.width / 2 - optionDiv.fontOffset, optionDiv.y + optionDiv.height / 2 - optionDiv.fontOffset);\n\n        // add listener\n        const listener = (ev: MouseEvent) => {\n            const { offsetTop, offsetLeft } = this.canvas;\n            // 实时获取参数避免监听window resize\n            const point: Tuple = [ev.clientX, ev.clientY];\n            const leftOption: Rect = {\n                beginPoint: [offsetLeft + optionDiv.leftX, offsetTop + optionDiv.y],\n                width: optionDiv.width,\n                height: optionDiv.height\n            };\n            const rightOption: Rect = {\n                beginPoint: [offsetLeft + optionDiv.rightX, offsetTop + optionDiv.y],\n                width: optionDiv.width,\n                height: optionDiv.height\n            };\n\n            if (pointInRect(point, leftOption)) {\n                callback();\n                this.canvas.removeEventListener(\"click\", listener);\n                this.canvas.removeEventListener(\"mousemove\", moveListener);\n            } else if (pointInRect(point, rightOption)) {\n                this.render();\n                this.canvas.removeEventListener(\"click\", listener);\n                this.canvas.removeEventListener(\"mousemove\", moveListener);\n            }\n        };\n\n        const moveListener = (ev: MouseEvent) => {\n            const { offsetTop, offsetLeft } = this.canvas;\n            // 实时获取参数避免监听window resize\n            const point: Tuple = [ev.clientX, ev.clientY];\n            const leftOption: Rect = {\n                beginPoint: [offsetLeft + optionDiv.leftX, offsetTop + optionDiv.y],\n                width: optionDiv.width,\n                height: optionDiv.height\n            };\n            const rightOption: Rect = {\n                beginPoint: [offsetLeft + optionDiv.rightX, offsetTop + optionDiv.y],\n                width: optionDiv.width,\n                height: optionDiv.height\n            };\n            if (pointInRect(point, leftOption) || pointInRect(point, rightOption)) {\n                this.canvas.style.cursor = \"pointer\";\n            } else {\n                this.canvas.style.cursor = \"default\";\n            }\n        };\n        this.canvas.addEventListener(\"click\", listener);\n        this.canvas.addEventListener(\"mousemove\", moveListener);\n    }\n\n    render () {\n        let count = 0;\n        const map = this.graphStack[this.graphStack.length - 1];\n\n        // before paint cell,paint all the cells `road` color\n        this.context.fillStyle = bgColor;\n        this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n        // 注意这里数组的第一纬对应canvas的y轴\n        // 这个循环做了绘图和计数,而计数用于统计没有被箱子覆盖的目标点数量，来判断游戏是否结束\n        map?.forEach((row, y) =>\n            row.forEach((item, x) => {\n                this.paintCell(x, y, item);\n                if (item === GraphCellEnum.goal || item === GraphCellEnum.playerOnGoal) {\n                    count++;\n                }\n            }));\n        // 游戏结束后的绘图\n        if (count === 0) {\n            this.success();\n        }\n    }\n\n    success () {\n        const { width, height } = this.canvas;\n        this.context.fillStyle = bgColor;\n        this.context.fillRect(0, 0, width, height);\n        this.context.font = \"60px serif\";\n        this.context.fillStyle = \"#ff0000\";\n        this.context.fillText(\"success\", width / 2 - 80, height / 2);\n\n        this.finishedLevel[this.level] = true;\n        saveFinishedLevel(this.finishedLevel);\n    }\n}\n","import React, { useEffect, useState, useMemo, useRef } from \"react\";\n\nimport \"./index.css\";\nimport FullScreen from \"../../FullScreen\";\nimport PushBox from \"./main/gameMaster\";\nimport { getGraphLength } from \"./data/graph.data\";\nimport { getFinishedLevel } from \"./utils/utils\";\n\nexport default function PushBoxGame () {\n    const gameMaster = useRef<PushBox>();\n    const canvas = useRef<HTMLCanvasElement>(null);\n\n    useEffect(() => {\n        if (canvas.current !== null) {\n            gameMaster.current = new PushBox(0, canvas.current);\n        } else {\n            throw new Error(\"can not get canvas\");\n        }\n    }, [canvas]);\n\n    useEffect(() => {\n        const listener = (event: KeyboardEvent) => {\n            switch (event.key) {\n                case \"w\":\n                case \"ArrowUp\":\n                    gameMaster.current?.playerMove(\"up\");\n                    break;\n                case \"a\":\n                case \"ArrowLeft\":\n                    gameMaster.current?.playerMove(\"left\");\n                    break;\n                case \"s\":\n                case \"ArrowDown\":\n                    gameMaster.current?.playerMove(\"down\");\n                    break;\n                case \"d\":\n                case \"ArrowRight\":\n                    gameMaster.current?.playerMove(\"right\");\n                    break;\n                case \"z\":\n                    gameMaster.current?.back();\n                    break;\n            }\n        };\n\n        document.addEventListener(\"keydown\", listener);\n\n        return () => {\n            document.removeEventListener(\"keydown\", listener);\n        };\n    }, [gameMaster]);\n\n    return (\n        <FullScreen>\n            <div id='pushBoxGame'>\n                <div className='gameUI'>\n                    <GameUI gameMaster={gameMaster} />\n                </div>\n                <div className='gameScene'>\n                    <canvas ref={canvas}></canvas>\n                </div>\n            </div>\n        </FullScreen>\n    );\n}\n\nfunction GameUI (props: {gameMaster: React.MutableRefObject<PushBox | undefined>}) {\n    const { gameMaster } = props;\n    const [level, setLevel] = useState(0);\n\n    const levelList = useMemo(() => {\n        const finishedLevel = getFinishedLevel();\n\n        const t: JSX.Element[] = [];\n        for (let i = 0; i < getGraphLength(); i++) {\n            let className = \"\";\n            if (finishedLevel[i]) className = \"finished\";\n            if (level === i) className = \"checked\";\n            t.push(\n                <div\n                    onClick={() => {\n                        if (level === i) return;\n                        gameMaster.current?.confirm(\n                            i,\n                            () => {\n                                gameMaster.current?.loadLevel(i);\n                                setLevel(i);\n                            });\n                    }}\n                    className={className}\n                    key={i}>{i}\n                </div>\n            );\n        }\n        return t;\n    }, [gameMaster, level]);\n\n    return <>\n        <div className=\"tipContainer\">\n            <div>up: w /&nbsp;<img src=\"/icons/icons8-present-to-all-48.png\" alt=\"arrow up img\" /></div>\n            <div>right: d /&nbsp;<img src=\"/icons/icons8-present-to-all-48.png\" alt=\"arrow up img\" /></div>\n            <div>down: s /&nbsp;<img src=\"/icons/icons8-present-to-all-48.png\" alt=\"arrow up img\" /></div>\n            <div>left: a /&nbsp;<img src=\"/icons/icons8-present-to-all-48.png\" alt=\"arrow up img\" /></div>\n            <div>back: z</div>\n            <div>full screen: f</div>\n        </div>\n        <div className=\"levelSelection\">\n            {levelList}\n        </div>\n    </>;\n}\n"],"names":["FullScreen","children","div","useRef","useEffect","listenFunc","ev","key","document","fullscreenElement","exitFullscreen","then","result","reason","current","requestFullscreen","v","r","addEventListener","removeEventListener","ref","deepClone","obj","JSON","parse","stringify","GraphCellEnum","direction2TupleMap","up","left","down","right","drawRectBorder","context","x","y","w","h","lineWidth","color","_lineWidth","_strokeStyle","strokeStyle","strokeRect","tupleAdd","a","b","pointInRect","point","rect","beginPoint","width","height","endPoint","XSB2NumberMap","$","_","XSB2Number","data","length","XSBArray","t","i","push","getFinishedLevel","localStorage","getItem","graphData","getGraphData","level","e","alert","Error","unitSize","bgColor","PushBox","canvas","graphStack","finishedLevel","this","getContext","render","pop","what","road","goal","fillStyle","beginPath","arc","Math","PI","closePath","fill","wall","box","boxOnGoal","fillRect","player","playerOnGoal","map","j","pos","undefined","value","direction","currentPos","getPlayerPos","nextPos","getGraphCellValue","setGraphCellValue","boxMovable","next2Pos","boxPos","callback","max","textDiv","backgroundColor","fontColor","padding","optionDiv","leftX","rightX","boderColor","fontOffset","font","textBaseline","fillText","moveListener","offsetTop","offsetLeft","clientX","clientY","leftOption","rightOption","style","cursor","listener","count","forEach","row","item","paintCell","success","setItem","PushBoxGame","gameMaster","event","playerMove","back","id","className","GameUI","props","useState","setLevel","levelList","useMemo","onClick","confirm","loadLevel","src","alt"],"sourceRoot":""}